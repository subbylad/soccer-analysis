# Soccer Scout AI - Docker Compose for Full Stack Development
version: '3.8'

services:
  # Backend API Service
  api:
    build: .
    container_name: soccer-scout-api
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5001
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend Service (for development)
  frontend:
    build:
      context: ./soccer-scout-ui
      dockerfile: Dockerfile.dev
    container_name: soccer-scout-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api:5001
    volumes:
      - ./soccer-scout-ui:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    restart: unless-stopped

  # Optional: Redis for caching (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   container_name: soccer-scout-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: Nginx proxy (for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: soccer-scout-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - api
  #     - frontend
  #   restart: unless-stopped

# volumes:
#   redis_data:

networks:
  default:
    name: soccer-scout-network